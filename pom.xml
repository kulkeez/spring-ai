<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.kulkeez</groupId>
	<artifactId>ai-demo</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>ai-demo</name>
	<description>AI Demo Application - accelerator to develop applications using Spring AI, Ollama and LLMs</description>
  	<inceptionYear>2025</inceptionYear>

	<developers>
    	<developer>
      		<id>kulkeez</id>
      		<name>Vikram Kulkarni</name>
      		<email>kulkeez@yahoo.com</email>
      		<url>http://www.hpe.com</url>
			<roles>
				<role>Programmer</role>
			</roles>
			<timezone>+5</timezone>  
		</developer>
  	</developers>
		
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.8</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<requireMavenVersion>3.9.9</requireMavenVersion>
		<java.version>21</java.version>
		<spring-ai.version>1.0.0-M1</spring-ai.version>
	</properties>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- This profile is active by default.
                     When this profile is active, only unit tests are run -->
                <activeByDefault>true</activeByDefault>
                
                <!-- activate if system properties 'env=dev' -->
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <properties>
            	<maven.test.skip>false</maven.test.skip>
            </properties>		
        </profile>
        
        <profile>
            <id>prod</id>
            <activation>
                <!-- activate if system properties 'env=prod' -->
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
            <properties>
            </properties>
        </profile>
               
    </profiles>
    		
	<dependencies>
	
		<!--  By default, Spring Boot use Tomcat as the default embedded server.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

        <!-- Spring AI Ollama Starter -->
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-ollama-spring-boot-starter</artifactId>
        </dependency>

		<!-- Spring AI PDF Document Reader -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-pdf-document-reader</artifactId>
		</dependency>

		<!-- Dependency for Spring Boot starter to integrate with pgvector store.
     		 This allows the application to use pgvector for AI-related data storage. -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-pgvector-store-spring-boot-starter</artifactId>
		</dependency>

		<!-- To detect Docker Compose services (defined in docker-compose.yaml)
		     and automatically launch them (i.e. PostgreSQL vector database, in this case) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--  Spring Boot Data JDBC  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<!--  To avoid boilerplate code i.e. need for declaring an instance of a logger -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!--  To use JUnit 5 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- hot swapping, disable cache for template, enable live reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>		

		<!--  Enable Actuator endpoints for monitoring health -->
		<!--  A new set of RESTful end points are added to the application such as /env, /health, /info, /metrics, /trace and /dump -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>	

		<!-- for using standard validation annotations-->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

			<!-- collects all the jars on the classpath and builds a single, runnable Ã¼ber-jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- display active profile in compile phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>none</phase>  <!--  change to 'compile' to debug & troubleshoot -->
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>   			
		</plugins>

		<!-- share the same plugin configuration across all project modules -->
		<!-- and lock down plugin versions to avoid using Maven defaults    -->
		<pluginManagement>
		  <plugins>
		  						
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${requireMavenVersion}</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
				
		  </plugins>
		</pluginManagement>
				
	</build>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
			<snapshots>
            	<enabled>true</enabled>
        	</snapshots>             
        </repository>

        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>		
    </repositories>
    
</project>
